{
  "cart_items_add_endpoint_test_data": {
    "valid_requests": [
      {
        "description": "Add single item to cart",
        "request": {
          "product_id": 1,
          "quantity": 2,
          "store_id": 1
        },
        "expected_status": 201,
        "expected_response": {
          "message": "Item added to cart successfully",
          "data": {
            "id": 1,
            "cart_id": 1,
            "product_id": 1,
            "quantity": 2,
            "price_at_time": 79,
            "created_At": "2025-06-23T10:30:00.000Z",
            "updated_At": "2025-06-23T10:30:00.000Z"
          }
        }
      },
      {
        "description": "Add different product to same store",
        "request": {
          "product_id": 2,
          "quantity": 1,
          "store_id": 1
        },
        "expected_status": 201
      },
      {
        "description": "Add product from different store",
        "request": {
          "product_id": 3,
          "quantity": 3,
          "store_id": 2
        },
        "expected_status": 201
      },
      {
        "description": "Add maximum quantity item",
        "request": {
          "product_id": 4,
          "quantity": 10,
          "store_id": 1
        },
        "expected_status": 201
      },
      {
        "description": "Add single quantity item",
        "request": {
          "product_id": 5,
          "quantity": 1,
          "store_id": 2
        },
        "expected_status": 201
      }
    ],
    "duplicate_item_requests": [
      {
        "description": "Add same item again (should update quantity)",
        "first_request": {
          "product_id": 1,
          "quantity": 2,
          "store_id": 1
        },
        "second_request": {
          "product_id": 1,
          "quantity": 3,
          "store_id": 1
        },
        "expected_result": "quantity should be 5 (2+3)"
      },
      {
        "description": "Multiple additions of same product",
        "requests": [
          {
            "product_id": 6,
            "quantity": 1,
            "store_id": 1
          },
          {
            "product_id": 6,
            "quantity": 2,
            "store_id": 1
          },
          {
            "product_id": 6,
            "quantity": 1,
            "store_id": 1
          }
        ],
        "expected_final_quantity": 4
      }
    ],
    "error_test_cases": {
      "missing_fields": [
        {
          "description": "Missing product_id",
          "request": {
            "quantity": 2,
            "store_id": 1
          },
          "expected_status": 400,
          "expected_error": "Product ID, quantity, and store ID are required"
        },
        {
          "description": "Missing quantity",
          "request": {
            "product_id": 1,
            "store_id": 1
          },
          "expected_status": 400,
          "expected_error": "Product ID, quantity, and store ID are required"
        },
        {
          "description": "Missing store_id",
          "request": {
            "product_id": 1,
            "quantity": 2
          },
          "expected_status": 400,
          "expected_error": "Product ID, quantity, and store ID are required"
        },
        {
          "description": "Empty request body",
          "request": {},
          "expected_status": 400,
          "expected_error": "Product ID, quantity, and store ID are required"
        }
      ],
      "invalid_data_types": [
        {
          "description": "Non-numeric product_id",
          "request": {
            "product_id": "abc",
            "quantity": 2,
            "store_id": 1
          },
          "expected_status": 400,
          "expected_error": "Product ID, quantity, and store ID must be valid numbers"
        },
        {
          "description": "Non-numeric quantity",
          "request": {
            "product_id": 1,
            "quantity": "two",
            "store_id": 1
          },
          "expected_status": 400,
          "expected_error": "Product ID, quantity, and store ID must be valid numbers"
        },
        {
          "description": "Non-numeric store_id",
          "request": {
            "product_id": 1,
            "quantity": 2,
            "store_id": "store1"
          },
          "expected_status": 400,
          "expected_error": "Product ID, quantity, and store ID must be valid numbers"
        },
        {
          "description": "Negative quantity",
          "request": {
            "product_id": 1,
            "quantity": -1,
            "store_id": 1
          },
          "expected_status": 400,
          "expected_error": "Quantity must be at least 1"
        },
        {
          "description": "Zero quantity",
          "request": {
            "product_id": 1,
            "quantity": 0,
            "store_id": 1
          },
          "expected_status": 400,
          "expected_error": "Quantity must be at least 1"
        }
      ],
      "not_found_errors": [
        {
          "description": "Non-existent product",
          "request": {
            "product_id": 99999,
            "quantity": 1,
            "store_id": 1
          },
          "expected_status": 404,
          "expected_error": "Product not found"
        },
        {
          "description": "No active cart for store",
          "request": {
            "product_id": 1,
            "quantity": 1,
            "store_id": 99999
          },
          "expected_status": 404,
          "expected_error": "Active cart not found for this store"
        }
      ],
      "stock_validation": [
        {
          "description": "Insufficient stock",
          "request": {
            "product_id": 3,
            "quantity": 100,
            "store_id": 2
          },
          "expected_status": 400,
          "expected_error": "Insufficient stock. Only 22 items available"
        },
        {
          "description": "Requesting more than available stock",
          "request": {
            "product_id": 1,
            "quantity": 50,
            "store_id": 1
          },
          "expected_status": 400,
          "expected_error": "Insufficient stock. Only 45 items available"
        }
      ]
    },
    "edge_cases": [
      {
        "description": "Add item with decimal quantity (should be converted to integer)",
        "request": {
          "product_id": 1,
          "quantity": 2.5,
          "store_id": 1
        },
        "note": "Number(2.5) = 2.5, but typically quantities should be integers"
      },
      {
        "description": "Add item with string numbers",
        "request": {
          "product_id": "1",
          "quantity": "2",
          "store_id": "1"
        },
        "expected_status": 201,
        "note": "Should work as they convert to valid numbers"
      },
      {
        "description": "Very large quantity (within stock limits)",
        "request": {
          "product_id": 14,
          "quantity": 95,
          "store_id": 1
        },
        "expected_status": 201,
        "note": "Assuming USB-C Cable has 95+ stock"
      }
    ],
    "sample_successful_responses": [
      {
        "status": 201,
        "body": {
          "message": "Item added to cart successfully",
          "data": {
            "id": 1,
            "cart_id": 1,
            "product_id": 1,
            "quantity": 2,
            "price_at_time": 79,
            "created_At": "2025-06-23T10:30:00.000Z",
            "updated_At": "2025-06-23T10:30:00.000Z"
          }
        }
      },
      {
        "status": 201,
        "body": {
          "message": "Item added to cart successfully",
          "data": {
            "id": 2,
            "cart_id": 1,
            "product_id": 2,
            "quantity": 1,
            "price_at_time": 25,
            "created_At": "2025-06-23T10:35:00.000Z",
            "updated_At": "2025-06-23T10:35:00.000Z"
          }
        }
      }
    ],
    "postman_collection_data": [
      {
        "name": "Add Item to Cart - Valid",
        "method": "POST",
        "url": "{{base_url}}/cart-items/add",
        "headers": {
          "Content-Type": "application/json",
          "Authorization": "Bearer {{auth_token}}"
        },
        "body": {
          "product_id": 1,
          "quantity": 2,
          "store_id": 1
        }
      },
      {
        "name": "Add Item to Cart - Missing Fields",
        "method": "POST",
        "url": "{{base_url}}/cart-items/add",
        "headers": {
          "Content-Type": "application/json",
          "Authorization": "Bearer {{auth_token}}"
        },
        "body": {
          "product_id": 1,
          "quantity": 2
        }
      },
      {
        "name": "Add Item to Cart - Invalid Data Types",
        "method": "POST",
        "url": "{{base_url}}/cart-items/add",
        "headers": {
          "Content-Type": "application/json",
          "Authorization": "Bearer {{auth_token}}"
        },
        "body": {
          "product_id": "abc",
          "quantity": "two",
          "store_id": 1
        }
      },
      {
        "name": "Add Item to Cart - Insufficient Stock",
        "method": "POST",
        "url": "{{base_url}}/cart-items/add",
        "headers": {
          "Content-Type": "application/json",
          "Authorization": "Bearer {{auth_token}}"
        },
        "body": {
          "product_id": 3,
          "quantity": 100,
          "store_id": 2
        }
      }
    ],
    "curl_commands": [
      {
        "description": "Valid request",
        "command": "curl -X POST http://localhost:3000/cart-items/add \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer YOUR_TOKEN\" \\\n  -d '{\"product_id\": 1, \"quantity\": 2, \"store_id\": 1}'"
      },
      {
        "description": "Missing fields test",
        "command": "curl -X POST http://localhost:3000/cart-items/add \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer YOUR_TOKEN\" \\\n  -d '{\"product_id\": 1, \"quantity\": 2}'"
      },
      {
        "description": "Invalid data types test",
        "command": "curl -X POST http://localhost:3000/cart-items/add \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer YOUR_TOKEN\" \\\n  -d '{\"product_id\": \"abc\", \"quantity\": \"two\", \"store_id\": 1}'"
      }
    ]
  },
  "test_sequence": {
    "description": "Complete test sequence for cart items add endpoint",
    "prerequisites": [
      "User must be authenticated (have valid token)",
      "At least one store must exist with ID 1 and 2",
      "Products must exist with IDs 1-20",
      "User must have active carts for stores or endpoint should handle cart creation"
    ],
    "test_steps": [
      {
        "step": 1,
        "action": "Test valid single item addition",
        "request": {
          "product_id": 1,
          "quantity": 2,
          "store_id": 1
        },
        "verify": "Item added successfully, cart total updated"
      },
      {
        "step": 2,
        "action": "Test adding same item again",
        "request": {
          "product_id": 1,
          "quantity": 1,
          "store_id": 1
        },
        "verify": "Quantity updated to 3, not creating duplicate"
      },
      {
        "step": 3,
        "action": "Test adding different item to same cart",
        "request": {
          "product_id": 2,
          "quantity": 1,
          "store_id": 1
        },
        "verify": "New cart item created, cart total includes both items"
      },
      {
        "step": 4,
        "action": "Test cross-store addition",
        "request": {
          "product_id": 3,
          "quantity": 2,
          "store_id": 2
        },
        "verify": "Item added to different store's cart"
      },
      {
        "step": 5,
        "action": "Test validation errors",
        "requests": [
          {"product_id": null, "quantity": 1, "store_id": 1},
          {"product_id": "abc", "quantity": 1, "store_id": 1},
          {"product_id": 1, "quantity": 0, "store_id": 1}
        ],
        "verify": "Appropriate error messages returned"
      },
      {
        "step": 6,
        "action": "Test stock validation",
        "request": {
          "product_id": 3,
          "quantity": 100,
          "store_id": 2
        },
        "verify": "Stock insufficient error returned"
      }
    ]
  }
}
