{
  "cart_add_endpoint_test_data": {
    "valid_test_cases": [
      {
        "description": "Add single item to cart",
        "request": {
          "productId": 1,
          "quantity": 2,
          "storeId": 1
        },
        "expected_status": 200,
        "expected_response": {
          "message": "Item added to cart successfully",
          "cartItem": {
            "id": 1,
            "cart_id": 1,
            "product_id": 1,
            "quantity": 2,
            "price_at_time": 79,
            "created_At": "2025-06-23T10:30:00.000Z",
            "updated_At": "2025-06-23T10:30:00.000Z"
          },
          "totalAmount": 158
        }
      },
      {
        "description": "Add electronics item",
        "request": {
          "productId": 1,
          "quantity": 1,
          "storeId": 1
        },
        "product_details": {
          "product_name": "Wireless Bluetooth Headphones",
          "price": 79,
          "category": "Electronics",
          "stock": 45
        }
      },
      {
        "description": "Add clothing item",
        "request": {
          "productId": 2,
          "quantity": 3,
          "storeId": 1
        },
        "product_details": {
          "product_name": "Organic Cotton T-Shirt",
          "price": 25,
          "category": "Clothing",
          "stock": 87
        }
      },
      {
        "description": "Add fitness item to different store",
        "request": {
          "productId": 3,
          "quantity": 2,
          "storeId": 2
        },
        "product_details": {
          "product_name": "Smart Water Bottle",
          "price": 45,
          "category": "Fitness",
          "stock": 22
        }
      },
      {
        "description": "Add gaming item",
        "request": {
          "productId": 4,
          "quantity": 1,
          "storeId": 1
        },
        "product_details": {
          "product_name": "Gaming Mechanical Keyboard",
          "price": 120,
          "category": "Gaming",
          "stock": 18
        }
      },
      {
        "description": "Add kitchen item",
        "request": {
          "productId": 5,
          "quantity": 4,
          "storeId": 2
        },
        "product_details": {
          "product_name": "Stainless Steel Coffee Mug",
          "price": 18,
          "category": "Kitchen",
          "stock": 65
        }
      }
    ],
    "duplicate_item_scenarios": [
      {
        "description": "Add same item twice (should update quantity)",
        "sequence": [
          {
            "step": 1,
            "request": {
              "productId": 1,
              "quantity": 2,
              "storeId": 1
            },
            "expected_quantity": 2
          },
          {
            "step": 2,
            "request": {
              "productId": 1,
              "quantity": 3,
              "storeId": 1
            },
            "expected_quantity": 5,
            "note": "Should update existing item, not create new one"
          }
        ]
      },
      {
        "description": "Multiple additions of different products",
        "sequence": [
          {
            "step": 1,
            "request": {
              "productId": 1,
              "quantity": 1,
              "storeId": 1
            }
          },
          {
            "step": 2,
            "request": {
              "productId": 2,
              "quantity": 2,
              "storeId": 1
            }
          },
          {
            "step": 3,
            "request": {
              "productId": 3,
              "quantity": 1,
              "storeId": 2
            },
            "note": "Different store, should create new cart"
          }
        ]
      }
    ],
    "error_test_cases": {
      "missing_fields": [
        {
          "description": "Missing productId",
          "request": {
            "quantity": 2,
            "storeId": 1
          },
          "expected_status": 400,
          "expected_error": "productId, quantity, and storeId are required"
        },
        {
          "description": "Missing quantity",
          "request": {
            "productId": 1,
            "storeId": 1
          },
          "expected_status": 400,
          "expected_error": "productId, quantity, and storeId are required"
        },
        {
          "description": "Missing storeId",
          "request": {
            "productId": 1,
            "quantity": 2
          },
          "expected_status": 400,
          "expected_error": "productId, quantity, and storeId are required"
        },
        {
          "description": "Empty request body",
          "request": {},
          "expected_status": 400,
          "expected_error": "productId, quantity, and storeId are required"
        }
      ],
      "invalid_values": [
        {
          "description": "Zero quantity",
          "request": {
            "productId": 1,
            "quantity": 0,
            "storeId": 1
          },
          "expected_status": 400,
          "expected_error": "Insufficient stock"
        },
        {
          "description": "Negative quantity",
          "request": {
            "productId": 1,
            "quantity": -1,
            "storeId": 1
          },
          "expected_status": 400,
          "expected_error": "Insufficient stock"
        },
        {
          "description": "Non-existent product",
          "request": {
            "productId": 99999,
            "quantity": 1,
            "storeId": 1
          },
          "expected_status": 404,
          "expected_error": "Product not found"
        },
        {
          "description": "Invalid product ID type",
          "request": {
            "productId": "invalid",
            "quantity": 1,
            "storeId": 1
          },
          "expected_status": 404,
          "expected_error": "Product not found"
        }
      ],
      "stock_validation": [
        {
          "description": "Quantity exceeds available stock",
          "request": {
            "productId": 3,
            "quantity": 50,
            "storeId": 2
          },
          "expected_status": 400,
          "expected_error": "Insufficient stock",
          "note": "Smart Water Bottle has only 22 in stock"
        },
        {
          "description": "Requesting maximum available stock",
          "request": {
            "productId": 4,
            "quantity": 18,
            "storeId": 1
          },
          "expected_status": 200,
          "note": "Gaming Mechanical Keyboard has exactly 18 in stock"
        },
        {
          "description": "Requesting more than maximum stock",
          "request": {
            "productId": 4,
            "quantity": 19,
            "storeId": 1
          },
          "expected_status": 400,
          "expected_error": "Insufficient stock"
        }
      ]
    },
    "edge_cases": [
      {
        "description": "Very large quantity within stock limits",
        "request": {
          "productId": 14,
          "quantity": 90,
          "storeId": 1
        },
        "note": "USB-C Cable has 95+ stock available"
      },
      {
        "description": "String numbers that should convert",
        "request": {
          "productId": "1",
          "quantity": "2",
          "storeId": "1"
        },
        "expected_status": 200,
        "note": "Should work as Number() converts strings"
      },
      {
        "description": "Decimal quantity",
        "request": {
          "productId": 1,
          "quantity": 2.5,
          "storeId": 1
        },
        "expected_status": 200,
        "note": "JavaScript Number() handles decimals"
      }
    ],
    "response_examples": {
      "successful_addition": {
        "status": 200,
        "body": {
          "message": "Item added to cart successfully",
          "cartItem": {
            "id": 1,
            "cart_id": 1,
            "product_id": 1,
            "quantity": 2,
            "price_at_time": 79,
            "created_At": "2025-06-23T10:30:00.000Z",
            "updated_At": "2025-06-23T10:30:00.000Z"
          },
          "totalAmount": 158
        }
      },
      "quantity_update": {
        "status": 200,
        "body": {
          "message": "Item added to cart successfully",
          "cartItem": {
            "id": 1,
            "cart_id": 1,
            "product_id": 1,
            "quantity": 5,
            "price_at_time": 79,
            "created_At": "2025-06-23T10:30:00.000Z",
            "updated_At": "2025-06-23T10:35:00.000Z"
          },
          "totalAmount": 395
        }
      },
      "cart_with_multiple_items": {
        "status": 200,
        "body": {
          "message": "Item added to cart successfully",
          "cartItem": {
            "id": 2,
            "cart_id": 1,
            "product_id": 2,
            "quantity": 1,
            "price_at_time": 25,
            "created_At": "2025-06-23T10:40:00.000Z",
            "updated_At": "2025-06-23T10:40:00.000Z"
          },
          "totalAmount": 420
        }
      }
    },
    "curl_commands": [
      {
        "description": "Valid addition",
        "command": "curl -X POST http://localhost:3000/cart/add \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer YOUR_TOKEN\" \\\n  -d '{\"productId\": 1, \"quantity\": 2, \"storeId\": 1}'"
      },
      {
        "description": "Missing fields test",
        "command": "curl -X POST http://localhost:3000/cart/add \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer YOUR_TOKEN\" \\\n  -d '{\"productId\": 1, \"quantity\": 2}'"
      },
      {
        "description": "Stock validation test",
        "command": "curl -X POST http://localhost:3000/cart/add \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer YOUR_TOKEN\" \\\n  -d '{\"productId\": 3, \"quantity\": 50, \"storeId\": 2}'"
      },
      {
        "description": "Non-existent product test",
        "command": "curl -X POST http://localhost:3000/cart/add \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer YOUR_TOKEN\" \\\n  -d '{\"productId\": 99999, \"quantity\": 1, \"storeId\": 1}'"
      }
    ],
    "postman_collection": [
      {
        "name": "Add Item to Cart - Valid",
        "method": "POST",
        "url": "{{base_url}}/cart/add",
        "headers": {
          "Content-Type": "application/json",
          "Authorization": "Bearer {{auth_token}}"
        },
        "body": {
          "productId": 1,
          "quantity": 2,
          "storeId": 1
        },
        "tests": [
          "pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
          "pm.test(\"Response has message\", function () { pm.expect(pm.response.json()).to.have.property('message'); });",
          "pm.test(\"Response has cartItem\", function () { pm.expect(pm.response.json()).to.have.property('cartItem'); });"
        ]
      },
      {
        "name": "Add Item to Cart - Missing Fields",
        "method": "POST",
        "url": "{{base_url}}/cart/add",
        "headers": {
          "Content-Type": "application/json",
          "Authorization": "Bearer {{auth_token}}"
        },
        "body": {
          "productId": 1,
          "quantity": 2
        },
        "tests": [
          "pm.test(\"Status code is 400\", function () { pm.response.to.have.status(400); });",
          "pm.test(\"Error message correct\", function () { pm.expect(pm.response.json().error).to.include('required'); });"
        ]
      },
      {
        "name": "Add Item to Cart - Insufficient Stock",
        "method": "POST",
        "url": "{{base_url}}/cart/add",
        "headers": {
          "Content-Type": "application/json",
          "Authorization": "Bearer {{auth_token}}"
        },
        "body": {
          "productId": 3,
          "quantity": 50,
          "storeId": 2
        },
        "tests": [
          "pm.test(\"Status code is 400\", function () { pm.response.to.have.status(400); });",
          "pm.test(\"Stock error message\", function () { pm.expect(pm.response.json().error).to.include('stock'); });"
        ]
      }
    ],
    "test_sequence": {
      "description": "Complete test flow for cart add functionality",
      "steps": [
        {
          "step": 1,
          "description": "Setup - Ensure test data exists",
          "actions": [
            "Verify products 1-5 exist in database",
            "Verify stores 1-2 exist in database",
            "Ensure test user is authenticated"
          ]
        },
        {
          "step": 2,
          "description": "Test valid single addition",
          "request": {
            "productId": 1,
            "quantity": 2,
            "storeId": 1
          },
          "verify": [
            "Status code 200",
            "Cart item created",
            "Total amount calculated correctly",
            "Cart created if didn't exist"
          ]
        },
        {
          "step": 3,
          "description": "Test duplicate item addition",
          "request": {
            "productId": 1,
            "quantity": 1,
            "storeId": 1
          },
          "verify": [
            "Quantity updated to 3",
            "Same cart item ID",
            "Total amount updated"
          ]
        },
        {
          "step": 4,
          "description": "Test different product same store",
          "request": {
            "productId": 2,
            "quantity": 1,
            "storeId": 1
          },
          "verify": [
            "New cart item created",
            "Total includes both products",
            "Same cart ID used"
          ]
        },
        {
          "step": 5,
          "description": "Test different store",
          "request": {
            "productId": 3,
            "quantity": 2,
            "storeId": 2
          },
          "verify": [
            "New cart created for store 2",
            "Separate cart totals"
          ]
        },
        {
          "step": 6,
          "description": "Test error scenarios",
          "tests": [
            "Missing fields",
            "Invalid product ID",
            "Insufficient stock",
            "Zero/negative quantities"
          ]
        }
      ]
    },
    "performance_tests": [
      {
        "description": "Concurrent additions",
        "scenario": "Multiple users adding same product simultaneously",
        "requests": [
          {"productId": 1, "quantity": 1, "storeId": 1},
          {"productId": 1, "quantity": 2, "storeId": 1},
          {"productId": 1, "quantity": 1, "storeId": 1}
        ],
        "verify": "Stock validation works correctly under load"
      },
      {
        "description": "Large quantity addition",
        "scenario": "Adding large quantities within stock limits",
        "request": {
          "productId": 14,
          "quantity": 95,
          "storeId": 1
        },
        "verify": "Performance acceptable for large quantities"
      }
    ]
  }
}
